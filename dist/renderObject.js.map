{"version":3,"sources":["RenderObject.jsx","../src/RenderObject.tsx"],"names":["Object","defineProperty","exports","value","React","require","server_1","jss_1","JssProvider_1","styles_1","react_redux_1","utils","compressor","compress","promisify","css","RenderObject","content","_result","_pipeline","Map","_content","sheetsRegistry","SheetsRegistry","generateClassName","createGenerateClassName","toString","charset","type","then","result","Promise","resolve","theme","store","initialState","JSON","stringify","getState","template","inserted","replace","gen","args","generator","call","set","name","execute","next","_addToPipeline","_withJss","has","delete","_withMui","withJss","_withRedux","_withTemplate","renderToString","kv","default"],"mappings":"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","file":"RenderObject.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst server_1 = require(\"react-dom/server\");\nconst jss_1 = require(\"react-jss/lib/jss\");\nconst JssProvider_1 = require(\"react-jss/lib/JssProvider\");\nconst styles_1 = require(\"@material-ui/core/styles\");\nconst react_redux_1 = require(\"react-redux\");\nconst utils = require(\"util\");\nconst compressor = require('yuicompressor');\ncompressor.compress = utils.promisify(compressor.compress);\nlet css = \"\";\nclass RenderObject {\n    constructor(content) {\n        this._result = \"\";\n        this._pipeline = new Map();\n        this._content = content;\n    }\n    *_withJss() {\n        const sheetsRegistry = new jss_1.SheetsRegistry();\n        const generateClassName = styles_1.createGenerateClassName();\n        this._content = (<JssProvider_1.default registry={sheetsRegistry} generateClassName={generateClassName}>\r\n                {this._content}\r\n            </JssProvider_1.default>);\n        yield this;\n        if (typeof css === \"undefined\" || css === \"\")\n            return compressor.compress(sheetsRegistry.toString(), {\n                charset: 'utf8',\n                type: 'css',\n                'line-break': 80\n            }).then((result) => {\n                css = result;\n                return this._result + `<style id=\"jss-server-side\">${css}</style>`;\n            });\n        else\n            return Promise.resolve(this._result + `<style id=\"jss-server-side\">${css}</style>`);\n    }\n    *_withMui(theme) {\n        this._content = (<styles_1.MuiThemeProvider theme={theme} sheetsManager={new Map()}>\r\n                {this._content}\r\n            </styles_1.MuiThemeProvider>);\n        yield this;\n        return Promise.resolve(this._result);\n    }\n    *_withRedux(store) {\n        this._content = (<react_redux_1.Provider store={store}>\r\n                {this._content}\r\n            </react_redux_1.Provider>);\n        let initialState = `<script>window.__INITIAL_STATE__ = ${JSON.stringify(store.getState())}</script>`;\n        yield this;\n        return Promise.resolve(this._result + initialState);\n    }\n    *_withTemplate(template) {\n        yield this;\n        let inserted = template.replace(/\\{\\{.+\\}\\}/, this._result);\n        return Promise.resolve(inserted);\n    }\n    _addToPipeline(gen, ...args) {\n        let generator = gen.call(this, ...args);\n        this._pipeline.set(gen.name, generator);\n        return {\n            execute: () => generator.next().value\n        };\n    }\n    withJss() {\n        return this._addToPipeline(this._withJss).execute();\n    }\n    withMui(theme) {\n        if (this._pipeline.has(\"_withJss\"))\n            this._pipeline.delete(\"_withJss\");\n        return this._addToPipeline(this._withMui, theme).execute().withJss();\n    }\n    withRedux(store) {\n        return this._addToPipeline(this._withRedux, store).execute();\n    }\n    withTemplate(template) {\n        return this._addToPipeline(this._withTemplate, template).execute();\n    }\n    async render() {\n        this._result = server_1.renderToString(this._content);\n        for (const kv of this._pipeline) {\n            this._result = await kv[1].next().value;\n        }\n        return this._result;\n    }\n}\nexports.default = RenderObject;\n","import * as React from \"react\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport { SheetsRegistry } from 'react-jss/lib/jss';\r\nimport JssProvider from 'react-jss/lib/JssProvider';\r\nimport { createGenerateClassName, MuiThemeProvider, Theme } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\nimport { Store } from '../node_modules/redux';\r\n\r\nconst utils         = require(\"util\");\r\nconst compressor    = require('yuicompressor');\r\n\r\ncompressor.compress = utils.promisify(compressor.compress);\r\nlet css = \"\";\r\n\r\n/**\r\n *\r\n *\r\n * @export\r\n * @class RenderObject\r\n */\r\nexport default class RenderObject {\r\n\r\n    //#region private properties\r\n\r\n    private _result = \"\";\r\n    private _content: JSX.Element;\r\n    private _pipeline = new Map<string, IterableIterator<this | Promise<string>>>();\r\n\r\n    //#endregion\r\n\r\n    constructor(content: JSX.Element) {\r\n        this._content = content;\r\n    }\r\n\r\n    //#region generators\r\n\r\n    private *_withJss() {\r\n\r\n        const sheetsRegistry = new SheetsRegistry();\r\n    \r\n        const generateClassName = createGenerateClassName();\r\n    \r\n        this._content = (\r\n            <JssProvider registry={ sheetsRegistry } generateClassName={ generateClassName }>\r\n                { this._content }\r\n            </JssProvider>\r\n        );\r\n\r\n        yield this;\r\n    \r\n        if (typeof css === \"undefined\" || css === \"\")\r\n            return compressor.compress(sheetsRegistry.toString(), {\r\n                charset: 'utf8',\r\n                type: 'css',\r\n                'line-break': 80\r\n            }).then((result) => {\r\n                css = result;\r\n                return this._result + `<style id=\"jss-server-side\">${css}</style>`\r\n            });\r\n        else\r\n            return Promise.resolve(this._result + `<style id=\"jss-server-side\">${css}</style>`);\r\n    }\r\n    \r\n    private *_withMui(theme: any) {\r\n\r\n        this._content = (\r\n            <MuiThemeProvider theme={ theme } sheetsManager={ new Map() } >\r\n                { this._content }\r\n            </MuiThemeProvider>\r\n        );\r\n\r\n        yield this;\r\n\r\n        return Promise.resolve(this._result);\r\n    }\r\n    \r\n    private *_withRedux(store: Store) {\r\n        \r\n        this._content = (\r\n            <Provider store={store}>\r\n                { this._content }\r\n            </Provider>\r\n        );\r\n\r\n        let initialState = `<script>window.__INITIAL_STATE__ = ${ JSON.stringify( store.getState() ) }</script>`;\r\n\r\n        yield this;\r\n\r\n        return Promise.resolve(this._result + initialState);\r\n    }\r\n    \r\n    private *_withTemplate(template: string) {\r\n\r\n        yield this;\r\n\r\n        let inserted = template.replace(/\\{\\{.+\\}\\}/, this._result);\r\n\r\n        return Promise.resolve(inserted);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region private methods\r\n\r\n    private _addToPipeline(gen: Function, ...args: any[]) {\r\n        \r\n        let generator = gen.call(this, ...args);\r\n\r\n        this._pipeline.set(gen.name, generator);\r\n\r\n        return { \r\n            execute: () => (generator as IterableIterator<this>).next().value \r\n        };\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region pipeline methods\r\n\r\n    /**\r\n     * Adds JSS support, ie rendering JSS to CSS string\r\n     * \r\n     * @returns\r\n     * @memberof RenderObject\r\n     */\r\n    public withJss() {\r\n        return this._addToPipeline(this._withJss).execute();\r\n    }\r\n\r\n    /**\r\n     * Adds React Material UI support including theming and rendering JSS to CSS string.\r\n     * See https://material-ui.com for more info\r\n     * @param {Theme} theme\r\n     * @returns\r\n     * @memberof RenderObject\r\n     */\r\n    public withMui(theme: Theme) {\r\n        if (this._pipeline.has(\"_withJss\"))\r\n            this._pipeline.delete(\"_withJss\");\r\n\r\n        return this._addToPipeline(this._withMui, theme).execute().withJss();\r\n    }\r\n\r\n    /**\r\n     * Adds redux support, ie provides store to React app and then renders it to window.\\_\\_INITIAL_STATE__ as JSON \r\n     *\r\n     * @param {Store} store\r\n     * @returns\r\n     * @memberof RenderObject\r\n     */\r\n    public withRedux(store: Store) {\r\n        return this._addToPipeline(this._withRedux, store).execute();\r\n    }\r\n\r\n    /**\r\n     * Inserts rendered html to the provided template to the place marked with {{  }}\r\n     *\r\n     * @param {string} template\r\n     * @returns\r\n     * @memberof RenderObject\r\n     */\r\n    public withTemplate(template: string) {\r\n        return this._addToPipeline(this._withTemplate, template).execute();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region public methods\r\n    \r\n    /**\r\n     * Renders React components into HTML string\r\n     *\r\n     * @returns {string} rendered HTML string\r\n     * @memberof RenderObject\r\n     */\r\n    public async render() {\r\n\r\n        this._result = renderToString(this._content);\r\n\r\n        for (const kv of this._pipeline) {\r\n            this._result = await kv[1].next().value as string;\r\n        }\r\n\r\n        return this._result;\r\n    }\r\n    \r\n    //#endregion\r\n}"]}