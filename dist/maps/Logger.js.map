{"version":3,"sources":["Logger.js","../src/Logger.ts"],"names":["Object","defineProperty","exports","value","fs","require","util","Logger","logPath","isInitialized","_logPath","existsSync","writeFileSync","message","date","Date","now","output","toLocaleString","appendFileSync","default"],"mappings":"AAAA;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACAA,IAAAC,EAAA,GAAAC,OAAA,CAAA,IAAA,CAAA;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;IAEqBE,M;;;AAMjB,kBAAYC,OAAZ,EAA2B;AAAA;;AAFpB,SAAAC,aAAA,GAAgB,KAAhB;AAGH,SAAKC,QAAL,GAAgBF,OAAhB;AACH;;;;2BAEU;AACP,UAAI,CAACJ,EAAE,CAACO,UAAH,CAAc,KAAKD,QAAnB,CAAL,EACIN,EAAE,CAACQ,aAAH,CAAiB,KAAKF,QAAtB,EAAgC,EAAhC;AAEJ,WAAKD,aAAL,GAAqB,IAArB;AACH;;;8BAEgBI,O,EAAY;AAEzB,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAX;AAEA,UAAIC,MAAM,cAAOH,IAAI,CAACI,cAAL,EAAP,eAAiCL,OAAjC,CAAV;AAEAT,MAAAA,EAAE,CAACe,cAAH,CAAkB,KAAKT,QAAvB,EAAiCO,MAAjC;AACH;;;;;;AAxBLf,OAAA,CAAAkB,OAAA,GAAAb,MAAA","file":"../Logger.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"fs\");\nconst util = require(\"util\");\nclass Logger {\n    constructor(logPath) {\n        this.isInitialized = false;\n        this._logPath = logPath;\n    }\n    init() {\n        if (!fs.existsSync(this._logPath))\n            fs.writeFileSync(this._logPath, \"\");\n        this.isInitialized = true;\n    }\n    logToFile(message) {\n        let date = new Date(Date.now());\n        let output = `[${date.toLocaleString()}] ${message}`;\n        fs.appendFileSync(this._logPath, output);\n    }\n}\nexports.default = Logger;\n","\r\nimport * as fs from \"fs\";\r\nconst util = require(\"util\");\r\n\r\nexport default class Logger {\r\n    \r\n    private _logPath: string;\r\n    \r\n    public isInitialized = false;\r\n    \r\n    constructor(logPath: string) {\r\n        this._logPath = logPath;\r\n    }\r\n    \r\n    public init() {\r\n        if (!fs.existsSync(this._logPath))\r\n            fs.writeFileSync(this._logPath, \"\");\r\n        \r\n        this.isInitialized = true;\r\n    }\r\n    \r\n    public logToFile(message: any) {\r\n        \r\n        let date = new Date(Date.now());\r\n        \r\n        let output = `[${date.toLocaleString()}] ${message}`;\r\n        \r\n        fs.appendFileSync(this._logPath, output);\r\n    }\r\n    \r\n}"]}